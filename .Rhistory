coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.000000000005, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
# Plot aggiornato
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.000005, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
# Plot aggiornato
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.5, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.000005, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.000001, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
annotate("label", x = 0.0000000000001, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
annotate("label", x = 0.13, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
ggplot(df_dens, aes(x = x, y = y)) +
geom_area(data = df_pos, aes(x = x, y = y), fill = "lightblue", alpha = 0.5) +
geom_area(data = df_null, aes(x = x, y = y), fill = "red", alpha = 0.6) +
geom_line(color = "black", size = 0.6) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey30") +
# Etichetta area nulla: spostata a sinistra (x = -0.03)
annotate("label", x = -0.03, y = max(df_dens$y) + 0.8,
label = paste0("P(-0.02 < β3 < 0.02) = ", round(area_NI, 3)),
fill = "red", color = "white", size = 4, label.size = NA) +
# Etichetta area positiva: spostata più a sinistra (x = 0.07)
annotate("label", x = 0.07, y = max(df_dens$y) + 0.8,
label = paste0("P(β3 > 0) = ", round(area_pos_b3, 3)),
fill = "lightblue", color = "black", size = 4, label.size = NA) +
labs(title = expression("Distribuzione a Posteriori di " * beta[3]),
x = expression(beta[3] * " (interazione TU × Gruppo)"),
y = "Densità") +
theme_minimal(base_size = 14) +
coord_cartesian(ylim = c(0, max(df_dens$y) + 1.5))
rm(list = ls())
df_go<- read.csv("C:/Users/39348/Desktop/DATI/go_unificato.csv", stringsAsFactors = FALSE)
table(df_go$id_subj, df_go$block_order)
df_go_acc<-df_go[df_go$acc==1 & df_go$identity=="go",]
table(df_go_acc$id_subj, df_go_acc$block_order)
#come si può notare cntrl13 ha sbagliato tutto
# quindi va eliminato e con lui l'accoppiamento con HM13
#eliminiamo CNTRL13 e HM13
df_go_acc <-df_go_acc[!df_go_acc$id_subj %in% c("CNTRL13"), ]
#controllo
unique(df_go_acc$id_subj)
table(df_go_acc$id_subj, df_go_acc$block_order)
df_go_acc$ordine<-ifelse(df_go_acc$block_order=="self-first", "TU","SCONOSCIUTO")
#grafico
library(ggplot2)
ggplot(df_go_acc, aes(x = rt, fill = ordine, color = ordine)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Go-TU vs Go-SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
soggetti<-unique(df_go_acc$id_subj)
ordine<-unique(df_go_acc$block_order)
df_go_pulito<-data.frame()
numero_totale_out<-0
for(s in soggetti){
for(i in ordine){
df_tr<-df_go_acc[df_go_acc$id_subj==s & df_go_acc$block_order==i,]
media<-mean(df_tr$rt,na.rm=T)
ds<-sd(df_tr$rt,na.rm=T)
lower<-media-3*ds
high<-media+3*ds
df_clean <- df_tr[df_tr$rt >= lower & df_tr$rt <= high, ]
n_out<-nrow(df_tr) - nrow(df_clean)
numero_totale_out <- numero_totale_out + n_out
if (n_out > 0) {
cat("Soggetto", s, "- Blocco", i, ": eliminati", n_out, "outlier\n")
}
df_go_pulito <-  rbind(df_go_pulito,df_clean)
}
}
cat("Totale outlier eliminati:", numero_totale_out, "\n")
df_go_pulito$block_order<-NULL
# #aggiungiamo match id:
#
#
# estrai_numero <- function(id) {
#   as.numeric(gsub("\\D", "", id))
# }
#
# matching_table <- data.frame(
#   id_subj = soggetti,
#   gruppo = ifelse(grepl("CNTRL", soggetti), "control", "target"),
#   numero = estrai_numero(soggetti)
# )
#
# matching_table$match_id <- paste0("match", sprintf("%02d", matching_table$numero))
# matching_table <- matching_table[, c("id_subj", "match_id")]
# matching_table
#
#
# df_go_pulito <- merge(df_go_pulito, matching_table, by = "id_subj", all.x = TRUE)
# table(df_go_pulito$id_subj, df_go_pulito$match_id)
#
#
df_go_pulito$ordine <- factor(df_go_pulito$ordine, levels = c("SCONOSCIUTO", "TU"))
df_go_pulito$group  <- factor(df_go_pulito$group,  levels = c("CTRL", "HSAM"))
levels(df_go_pulito$ordine)
levels(df_go_pulito$group)
library(glmmTMB)
fit_gamma <- glmmTMB(
rt ~ ordine * group + (1 + ordine | id_subj),
data = df_go_pulito,
family = Gamma(link = "log")
)
summary(fit_gamma)
saveRDS(fit_gamma,file="fit_gamma_freq")
fit_gamma<- readRDS(fit_gamma,file="fit_gamma_freq")
source("~/.active-rstudio-document", echo=TRUE)
exp(.11)
# power go no go
# y=B0+B1I+B2G+B3IG
rm(list=ls())
N=1000
n_trial=100
b0 <- -0.7   #500 ms alla baseline--> CNTRL - SCONOSCIUTO
b1 <- 0.183   #exp=1.2 significa che effetto I quando =TU aumenta RT 20% rispettp sconosciuto
b2 <- 0       #effetto nullo
b3 <- 0.11
#b3->Nei soggetti HSAM, l’effetto TU (vs SCONOSCIUTO) è piùforte 11% rispetto ai controlli.
df <- expand.grid(trial = 1:n_trial, id = 1:N)
df <- df[, c("id", "trial")]
#inseriamo le condizioni
df$G<-ifelse(df$id <= N/2,0,1)
df$I<-ifelse(df$trial<51,0,1)
#parametri:
df$b0<-rep(b0,nrow(df))
df$b1<-rep(b1,nrow(df))
df$b2<-rep(b2,nrow(df))
df$b3<-rep(b3,nrow(df))
#inseriamo intercetta e slope random correlati .25 tra lloro
# b0i<-rnorm(N,0,0.1)
# b1i<-rnorm(N,0,0.1)
library(MASS)
# matrice di covarianza con correlazione 0.25
Sigma <- matrix(c(0.01, 0.0025,
0.0025, 0.01), nrow = 2)
rand_eff <- mvrnorm(n = N, mu = c(0, 0), Sigma = Sigma)
b0i <- rand_eff[, 1]
b1i <- rand_eff[, 2]
df$b0i <- b0i[df$id]
df$b1i <- b1i[df$id]
#shape=17 shape=mu/rate
#rate*shape=mu
#rate=mu/shape
#calcoliamo mu e poi rate
shape=17
log_mu <- with(df, b0 + b1*I + b2*G + b3*I*G +b0i + b1i * I)
mu <- exp(log_mu)
rate<-mu/shape
df$y  <- rgamma(nrow(df), shape = shape, scale = mu / shape)
hist(df$y)
summary(df$y)
#testiamo:
library(glmmTMB)
# modello con distribuzione Gamma e link log
fit_power <- glmmTMB(
y ~ I* G+ (1 + I | id),
data = df,
family = Gamma(link = "log")
)
summary(fit)
summary(fit_power)
rm(list=ls())
N=10000
n_trial=100
b0 <- -0.7   #500 ms alla baseline--> CNTRL - SCONOSCIUTO
b1 <- 0.183   #exp=1.2 significa che effetto I quando =TU aumenta RT 20% rispettp sconosciuto
b2 <- 0       #effetto nullo
b3 <- 0.11
#b3->Nei soggetti HSAM, l’effetto TU (vs SCONOSCIUTO) è piùforte 11% rispetto ai controlli.
df <- expand.grid(trial = 1:n_trial, id = 1:N)
df <- df[, c("id", "trial")]
#inseriamo le condizioni
df$G<-ifelse(df$id <= N/2,0,1)
df$I<-ifelse(df$trial<51,0,1)
#parametri:
df$b0<-rep(b0,nrow(df))
df$b1<-rep(b1,nrow(df))
df$b2<-rep(b2,nrow(df))
df$b3<-rep(b3,nrow(df))
#inseriamo intercetta e slope random correlati .25 tra lloro
# b0i<-rnorm(N,0,0.1)
# b1i<-rnorm(N,0,0.1)
library(MASS)
# matrice di covarianza con correlazione 0.25
Sigma <- matrix(c(0.01, 0.0025,
0.0025, 0.01), nrow = 2)
rand_eff <- mvrnorm(n = N, mu = c(0, 0), Sigma = Sigma)
b0i <- rand_eff[, 1]
b1i <- rand_eff[, 2]
df$b0i <- b0i[df$id]
df$b1i <- b1i[df$id]
#shape=17 shape=mu/rate
#rate*shape=mu
#rate=mu/shape
#calcoliamo mu e poi rate
shape=17
log_mu <- with(df, b0 + b1*I + b2*G + b3*I*G +b0i + b1i * I)
mu <- exp(log_mu)
rate<-mu/shape
df$y  <- rgamma(nrow(df), shape = shape, scale = mu / shape)
hist(df$y)
summary(df$y)
#testiamo:
library(glmmTMB)
# modello con distribuzione Gamma e link log
fit_power <- glmmTMB(
y ~ I* G+ (1 + I | id),
data = df,
family = Gamma(link = "log")
)
summary(fit_power)
saveRDS(fit_power,file="power fit")
####fitta bene i parametri
library(ggplot2)
# Parametri prior
df <- 3
loc <- 0
scale <- 0.08
# Intervallo nullo ±10ms log-scale
null_width <- log((500 + 10) / 500)  # ≈ 0.0198
x_vals <- seq(-0.3, 0.3, length.out = 1000)
prior_density <- dt((x_vals - loc) / scale, df = df) / scale
df_prior <- data.frame(x = x_vals, y = prior_density)
ggplot(df_prior, aes(x = x, y = y)) +
geom_line(color = "darkorange", size = 1) +
geom_vline(xintercept = 0.11, color = "blue", linetype = "dashed", size = 1) +
geom_area(data = subset(df_prior, x >= -null_width & x <= null_width),
aes(x = x, y = y), fill = "red", alpha = 0.5) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey40") +
annotate("text", x = 0.11, y = max(df_prior$y),
label = "β₃ = 0.11", hjust = -0.1, color = "blue") +
labs(title = expression("Distribuzione a priori di " * beta[3]),
x = expression(beta[3]),
y = "Densità") +
theme_minimal(base_size = 14)
library(ggplot2)
# Parametri prior
df <- 3
loc <- 0
scale <- 0.08
# Intervallo nullo ±10ms log-scale
null_width <- log((500 + 10) / 500)  # ≈ 0.0198
x_vals <- seq(-0.3, 0.3, length.out = 1000)
prior_density <- dt((x_vals - loc) / scale, df = df) / scale
df_prior <- data.frame(x = x_vals, y = prior_density)
ggplot(df_prior, aes(x = x, y = y)) +
geom_line(color = "black", size = 1) +
geom_vline(xintercept = 0.11, color = "black", linetype = "dashed", size = 0.5) +
geom_area(data = subset(df_prior, x >= -null_width & x <= null_width),
aes(x = x, y = y), fill = "red", alpha = 0.5) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey40") +
annotate("text", x = 0.11, y = max(df_prior$y),
label = "β3 = 0.11", hjust = -0.1, color = "blue") +
labs(title = expression("Distribuzione a priori di " * beta[3]),
x = expression(beta[3]),
y = "Densità") +
theme_minimal(base_size = 14)
# Parametri prior
df <- 3
loc <- 0
scale <- 0.08
# Intervallo nullo ±10ms log-scale
null_width <- log((500 + 10) / 500)  # ≈ 0.0198
x_vals <- seq(-0.3, 0.3, length.out = 1000)
prior_density <- dt((x_vals - loc) / scale, df = df) / scale
df_prior <- data.frame(x = x_vals, y = prior_density)
ggplot(df_prior, aes(x = x, y = y)) +
geom_line(color = "black", size = 1) +
geom_vline(xintercept = 0.11, color = "black", linetype = "dashed", size = 0.5) +
geom_area(data = subset(df_prior, x >= -null_width & x <= null_width),
aes(x = x, y = y), fill = "red", alpha = 0.5) +
geom_vline(xintercept = 0, linetype = "dotted", color = "grey40") +
annotate("text", x = 0.11, y = max(df_prior$y),
label = "β3 = 0.11", hjust = -0.1, color = "black") +
labs(title = expression("Distribuzione a priori di " * beta[3]),
x = expression(beta[3]),
y = "Densità") +
theme_minimal(base_size = 14)
rm(list = ls())
df_m <- read.csv("C:/Users/39348/Desktop/DATI/matching_task_unificato.csv", stringsAsFactors = FALSE)
aggregate(rt ~ id_subj, data = df_m, FUN = length) #toglie gli Na
table(df_m$id_subj)
df<-df_m[df_m$acc==1 & (df_m$identity=="matching SCONOSCIUTO" | df_m$identity=="matching TU"),]
#come check:
# table(df$acc)
# table(df$identity)
# table(df$identity, df$acc)  # tabella incrociata
# any(df$acc == 0)   # TRUE se c'è almeno un acc = 0
# all(df$acc == 1)     # TRUE se sono tutti 1
# which(df_m$acc == 0)  # quali righe hanno acc = 0
## grafico
library(ggplot2)
# Mappa per rendere i nomi più leggibili (facoltativo)
df$identity_label <- ifelse(df$identity == "matching TU", "TU", "SCONOSCIUTO")
# Grafico con densità sovrapposte
ggplot(df, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
# crea funzione che per ogni partecipante cacoli media ed sd rt corretti
# trial matching poi elimini e stampi numero di rt eliminati sopra o sotto
# le 3 sd
#
#mn<-aggregate(rt ~ id_subj+ identity, data = df, FUN = mean, na.rm=TRUE)
#st<-aggregate(rt ~ id_subj+ identity, data = df, FUN = function(x) sd(x, na.rm = TRUE))
#
# bo<-rbind(mean,sd)
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
sub<-data.frame(
id_subj = character(),
identity_label = character(),
mean_rt = numeric(),
sd_rt = numeric(),
stringsAsFactors = FALSE
)
pulizia <- function(df){
df_cleaned <- data.frame()
sub <- data.frame()
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
for (s in soggetti) {
for (c in condizioni) {
sottoinsieme <- df[df$id_subj == s & df$identity_label == c, ]
if (nrow(sottoinsieme) == 0) next
media_rt <- mean(sottoinsieme$rt, na.rm = TRUE)
sd_rt <- sd(sottoinsieme$rt, na.rm = TRUE)
lower <- media_rt - 3 * sd_rt
upper <- media_rt + 3 * sd_rt
sottoinsieme_pulito <- sottoinsieme[sottoinsieme$rt >= lower & sottoinsieme$rt <= upper, ]
n_rimossi <- nrow(sottoinsieme) - nrow(sottoinsieme_pulito)
if (n_rimossi > 0) {
cat(" Rimossi", n_rimossi, "outlier per il soggetto", s, "nella condizione", c, "\n")
} else {
cat("Nessun outlier per", s, "-", c, "\n")
}
df_cleaned <- rbind(df_cleaned, sottoinsieme_pulito)
sub <<- rbind(sub, data.frame(
id_subj = s,
identity_label = c,
mean_rt = media_rt,
sd_rt = sd_rt,
stringsAsFactors = FALSE
))
}
}
return(df_cleaned)
}
df_pulito <- pulizia(df)
hist(y)
rm(list=ls())
N=10
n_trial=100
b0 <- -0.7   #500 ms alla baseline--> CNTRL - SCONOSCIUTO
b1 <- 0.183   #exp=1.2 significa che effetto I quando =TU aumenta RT 20% rispettp sconosciuto
b2 <- 0       #effetto nullo
b3 <- 0.11
#b3->Nei soggetti HSAM, l’effetto TU (vs SCONOSCIUTO) è piùforte 11% rispetto ai controlli.
df <- expand.grid(trial = 1:n_trial, id = 1:N)
df <- df[, c("id", "trial")]
#inseriamo le condizioni
df$G<-ifelse(df$id <= N/2,0,1)
df$I<-ifelse(df$trial<51,0,1)
#parametri:
df$b0<-rep(b0,nrow(df))
df$b1<-rep(b1,nrow(df))
df$b2<-rep(b2,nrow(df))
df$b3<-rep(b3,nrow(df))
#inseriamo intercetta e slope random correlati .25 tra lloro
# b0i<-rnorm(N,0,0.1)
# b1i<-rnorm(N,0,0.1)
library(MASS)
# matrice di covarianza con correlazione 0.25
Sigma <- matrix(c(0.01, 0.0025,
0.0025, 0.01), nrow = 2)
rand_eff <- mvrnorm(n = N, mu = c(0, 0), Sigma = Sigma)
b0i <- rand_eff[, 1]
b1i <- rand_eff[, 2]
df$b0i <- b0i[df$id]
df$b1i <- b1i[df$id]
#shape=17 shape=mu/rate
#rate*shape=mu
#rate=mu/shape
#calcoliamo mu e poi rate
shape=17
log_mu <- with(df, b0 + b1*I + b2*G + b3*I*G +b0i + b1i * I)
mu <- exp(log_mu)
rate<-mu/shape
df$y  <- rgamma(nrow(df), shape = shape, scale = mu / shape)
hist(df$y)
hist(df$y, probability = TRUE, col = "lightgray", border = "white",
main = "")
lines(density(df$y), col = "red", lwd = 2)
quarto::quarto_render()
installed.packages("quarto")
quarto::quarto_render()
library(quarto)
install.packages("quarto")
library(quarto)
quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
