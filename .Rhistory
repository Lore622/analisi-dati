#   id_subj = soggetti,
#   gruppo = ifelse(grepl("CNTRL", soggetti), "control", "target"),
#   numero = estrai_numero(soggetti)
# )
#
# matching_table$match_id <- paste0("match", sprintf("%02d", matching_table$numero))
# matching_table <- matching_table[, c("id_subj", "match_id")]
# matching_table
#
#
# df_pulito <- merge(df_pulito, matching_table, by = "id_subj", all.x = TRUE)
# table(df_pulito$id_subj, df_pulito$match_id)
## controllo:
# df_pulito$group <- factor(df_pulito$group, levels = c("control", "target"))
# df_pulito$identity <- factor(df_pulito$identity, levels = c("SCONOSCIUTO", "TU"))
# df_pulito$match_id <- as.factor(df_pulito$match_id)
# df_pulito$id_subj <- as.factor(df_pulito$id_subj)
df_pulito$identity_label <- factor(df_pulito$identity_label, levels = c("SCONOSCIUTO", "TU"))
df_pulito$group <- factor(df_pulito$group, levels = c("CTRL", "HSAM"))
# Grafico con densità sovrapposte
ggplot(df_pulito, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
# Grafico con densità sovrapposte
ggplot(df_pulito, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
rm(list = ls())
df_m <- read.csv("C:/Users/39348/Desktop/DATI/matching_task_unificato.csv", stringsAsFactors = FALSE)
aggregate(rt ~ id_subj, data = df_m, FUN = length) #toglie gli Na
table(df_m$id_subj)
df<-df_m[df_m$acc==1 & (df_m$identity=="matching SCONOSCIUTO" | df_m$identity=="matching TU"),]
#come check:
# table(df$acc)
# table(df$identity)
# table(df$identity, df$acc)  # tabella incrociata
# any(df$acc == 0)   # TRUE se c'è almeno un acc = 0
# all(df$acc == 1)     # TRUE se sono tutti 1
# which(df_m$acc == 0)  # quali righe hanno acc = 0
## grafico
library(ggplot2)
# Mappa per rendere i nomi più leggibili (facoltativo)
df$identity_label <- ifelse(df$identity == "matching TU", "TU", "SCONOSCIUTO")
# Grafico con densità sovrapposte
ggplot(df_pulito, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
rm(list = ls())
df_m <- read.csv("C:/Users/39348/Desktop/DATI/matching_task_unificato.csv", stringsAsFactors = FALSE)
aggregate(rt ~ id_subj, data = df_m, FUN = length) #toglie gli Na
table(df_m$id_subj)
df<-df_m[df_m$acc==1 & (df_m$identity=="matching SCONOSCIUTO" | df_m$identity=="matching TU"),]
#come check:
# table(df$acc)
# table(df$identity)
# table(df$identity, df$acc)  # tabella incrociata
# any(df$acc == 0)   # TRUE se c'è almeno un acc = 0
# all(df$acc == 1)     # TRUE se sono tutti 1
# which(df_m$acc == 0)  # quali righe hanno acc = 0
## grafico
library(ggplot2)
# Mappa per rendere i nomi più leggibili (facoltativo)
df$identity_label <- ifelse(df$identity == "matching TU", "TU", "SCONOSCIUTO")
# crea funzione che per ogni partecipante cacoli media ed sd rt corretti
# trial matching poi elimini e stampi numero di rt eliminati sopra o sotto
# le 3 sd
#
#mn<-aggregate(rt ~ id_subj+ identity, data = df, FUN = mean, na.rm=TRUE)
#st<-aggregate(rt ~ id_subj+ identity, data = df, FUN = function(x) sd(x, na.rm = TRUE))
#
# bo<-rbind(mean,sd)
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
sub<-data.frame(
id_subj = character(),
identity_label = character(),
mean_rt = numeric(),
sd_rt = numeric(),
stringsAsFactors = FALSE
)
pulizia <- function(df){
df_cleaned <- data.frame()
sub <- data.frame()
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
for (s in soggetti) {
for (c in condizioni) {
sottoinsieme <- df[df$id_subj == s & df$identity_label == c, ]
if (nrow(sottoinsieme) == 0) next
media_rt <- mean(sottoinsieme$rt, na.rm = TRUE)
sd_rt <- sd(sottoinsieme$rt, na.rm = TRUE)
lower <- media_rt - 3 * sd_rt
upper <- media_rt + 3 * sd_rt
sottoinsieme_pulito <- sottoinsieme[sottoinsieme$rt >= lower & sottoinsieme$rt <= upper, ]
n_rimossi <- nrow(sottoinsieme) - nrow(sottoinsieme_pulito)
if (n_rimossi > 0) {
cat(" Rimossi", n_rimossi, "outlier per il soggetto", s, "nella condizione", c, "\n")
} else {
cat("Nessun outlier per", s, "-", c, "\n")
}
df_cleaned <- rbind(df_cleaned, sottoinsieme_pulito)
sub <<- rbind(sub, data.frame(
id_subj = s,
identity_label = c,
mean_rt = media_rt,
sd_rt = sd_rt,
stringsAsFactors = FALSE
))
}
}
return(df_cleaned)
}
df_pulito <- pulizia(df)
# Grafico con densità sovrapposte
ggplot(df_pulito, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
#length(df_pulito$rt[df_pulito$id_subj=="CNTRL01"])
#aggiungiamo match_id:
# soggetti <- sort(unique(df_pulito$id_subj))
#
# estrai_numero <- function(id) {
#   as.numeric(gsub("\\D", "", id))
# }
#
# matching_table <- data.frame(
#   id_subj = soggetti,
#   gruppo = ifelse(grepl("CNTRL", soggetti), "control", "target"),
#   numero = estrai_numero(soggetti)
# )
#
# matching_table$match_id <- paste0("match", sprintf("%02d", matching_table$numero))
# matching_table <- matching_table[, c("id_subj", "match_id")]
# matching_table
#
#
# df_pulito <- merge(df_pulito, matching_table, by = "id_subj", all.x = TRUE)
# table(df_pulito$id_subj, df_pulito$match_id)
## controllo:
# df_pulito$group <- factor(df_pulito$group, levels = c("control", "target"))
# df_pulito$identity <- factor(df_pulito$identity, levels = c("SCONOSCIUTO", "TU"))
# df_pulito$match_id <- as.factor(df_pulito$match_id)
# df_pulito$id_subj <- as.factor(df_pulito$id_subj)
df_pulito$identity_label <- factor(df_pulito$identity_label, levels = c("SCONOSCIUTO", "TU"))
df_pulito$group <- factor(df_pulito$group, levels = c("CTRL", "HSAM"))
library(brms)
View(df_pulito)
?subset
df_hsam<-subset(df_pulito,group="HSAM",select=c(rt,id_subj,group,acc,identity_label))
df_hsam<-subset(df_pulito,df_pulito$group="HSAM",select=c(rt,id_subj,group,acc,identity_label))
df_hsam<-subset(df_pulito,df_pulito$group=="HSAM",select=c(rt,id_subj,group,acc,identity_label))
View(df_hsam)
media_hsam<-tapply(df_hsam$rt,df_hsam$identity_label,mean)
media_hsam
sd_hsam<-tapply(df_hsam$rt,df_hsam$identity_label,sd)
df_cntrl<-subset(df_pulito,df_pulito$group=="CNTRL",select=c(rt,id_subj,group,acc,identity_label))
df_cntrl<-subset(df_pulito,df_pulito$group=="CNTRL",select=c(rt,id_subj,group,acc,identity_label))
media_cntrl<-tapply(df_cntrl$rt,df_hsam$identity_label,mean)
sd_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,sd)
library(brms)
media_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,mean)
sd_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,sd)
media_cntrl
df_cntrl<-subset(df_pulito,df_pulito$group=="CTRL",select=c(rt,id_subj,group,acc,identity_label))
media_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,mean)
media_cntrl
sd_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,sd)
rm(list = ls())
df_go<- read.csv("C:/Users/39348/Desktop/DATI/go_unificato.csv", stringsAsFactors = FALSE)
table(df_go$id_subj, df_go$block_order)
df_go_acc<-df_go[df_go$acc==1 & df_go$identity=="go",]
table(df_go_acc$id_subj, df_go_acc$block_order)
#come si può notare cntrl13 ha sbagliato tutto
# quindi va eliminato e con lui l'accoppiamento con HM13
#eliminiamo CNTRL13 e HM13
df_go_acc <-df_go_acc[!df_go_acc$id_subj %in% c("CNTRL13"), ]
#controllo
unique(df_go_acc$id_subj)
table(df_go_acc$id_subj, df_go_acc$block_order)
df_go_acc$ordine<-ifelse(df_go_acc$block_order=="self-first", "TU","SCONOSCIUTO")
#grafico
library(ggplot2)
ggplot(df_go_acc, aes(x = rt, fill = ordine, color = ordine)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Go-TU vs Go-SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
soggetti<-unique(df_go_acc$id_subj)
ordine<-unique(df_go_acc$block_order)
df_go_pulito<-data.frame()
numero_totale_out<-0
for(s in soggetti){
for(i in ordine){
df_tr<-df_go_acc[df_go_acc$id_subj==s & df_go_acc$block_order==i,]
media<-mean(df_tr$rt,na.rm=T)
ds<-sd(df_tr$rt,na.rm=T)
lower<-media-3*ds
high<-media+3*ds
df_clean <- df_tr[df_tr$rt >= lower & df_tr$rt <= high, ]
n_out<-nrow(df_tr) - nrow(df_clean)
numero_totale_out <- numero_totale_out + n_out
if (n_out > 0) {
cat("Soggetto", s, "- Blocco", i, ": eliminati", n_out, "outlier\n")
}
df_go_pulito <-  rbind(df_go_pulito,df_clean)
}
}
cat("Totale outlier eliminati:", numero_totale_out, "\n")
df_go_pulito$block_order<-NULL
# #aggiungiamo match id:
#
#
# estrai_numero <- function(id) {
#   as.numeric(gsub("\\D", "", id))
# }
#
# matching_table <- data.frame(
#   id_subj = soggetti,
#   gruppo = ifelse(grepl("CNTRL", soggetti), "control", "target"),
#   numero = estrai_numero(soggetti)
# )
#
# matching_table$match_id <- paste0("match", sprintf("%02d", matching_table$numero))
# matching_table <- matching_table[, c("id_subj", "match_id")]
# matching_table
#
#
# df_go_pulito <- merge(df_go_pulito, matching_table, by = "id_subj", all.x = TRUE)
# table(df_go_pulito$id_subj, df_go_pulito$match_id)
#
#
df_go_pulito$ordine <- factor(df_go_pulito$ordine, levels = c("SCONOSCIUTO", "TU"))
df_go_pulito$group  <- factor(df_go_pulito$group,  levels = c("CTRL", "HSAM"))
levels(df_go_pulito$ordine)
levels(df_go_pulito$group)
View(df_go_pulito)
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CNTRL" = "orange")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CNTRL" = "darkorange")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
rm(list = ls())
df_m <- read.csv("C:/Users/39348/Desktop/DATI/matching_task_unificato.csv", stringsAsFactors = FALSE)
aggregate(rt ~ id_subj, data = df_m, FUN = length) #toglie gli Na
table(df_m$id_subj)
df<-df_m[df_m$acc==1 & (df_m$identity=="matching SCONOSCIUTO" | df_m$identity=="matching TU"),]
#come check:
# table(df$acc)
# table(df$identity)
# table(df$identity, df$acc)  # tabella incrociata
# any(df$acc == 0)   # TRUE se c'è almeno un acc = 0
# all(df$acc == 1)     # TRUE se sono tutti 1
# which(df_m$acc == 0)  # quali righe hanno acc = 0
## grafico
library(ggplot2)
# Mappa per rendere i nomi più leggibili (facoltativo)
df$identity_label <- ifelse(df$identity == "matching TU", "TU", "SCONOSCIUTO")
# crea funzione che per ogni partecipante cacoli media ed sd rt corretti
# trial matching poi elimini e stampi numero di rt eliminati sopra o sotto
# le 3 sd
#
#mn<-aggregate(rt ~ id_subj+ identity, data = df, FUN = mean, na.rm=TRUE)
#st<-aggregate(rt ~ id_subj+ identity, data = df, FUN = function(x) sd(x, na.rm = TRUE))
#
# bo<-rbind(mean,sd)
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
sub<-data.frame(
id_subj = character(),
identity_label = character(),
mean_rt = numeric(),
sd_rt = numeric(),
stringsAsFactors = FALSE
)
pulizia <- function(df){
df_cleaned <- data.frame()
sub <- data.frame()
soggetti <- unique(df$id_subj)
condizioni <- unique(df$identity_label)
for (s in soggetti) {
for (c in condizioni) {
sottoinsieme <- df[df$id_subj == s & df$identity_label == c, ]
if (nrow(sottoinsieme) == 0) next
media_rt <- mean(sottoinsieme$rt, na.rm = TRUE)
sd_rt <- sd(sottoinsieme$rt, na.rm = TRUE)
lower <- media_rt - 3 * sd_rt
upper <- media_rt + 3 * sd_rt
sottoinsieme_pulito <- sottoinsieme[sottoinsieme$rt >= lower & sottoinsieme$rt <= upper, ]
n_rimossi <- nrow(sottoinsieme) - nrow(sottoinsieme_pulito)
if (n_rimossi > 0) {
cat(" Rimossi", n_rimossi, "outlier per il soggetto", s, "nella condizione", c, "\n")
} else {
cat("Nessun outlier per", s, "-", c, "\n")
}
df_cleaned <- rbind(df_cleaned, sottoinsieme_pulito)
sub <<- rbind(sub, data.frame(
id_subj = s,
identity_label = c,
mean_rt = media_rt,
sd_rt = sd_rt,
stringsAsFactors = FALSE
))
}
}
return(df_cleaned)
}
df_pulito <- pulizia(df)
# Grafico con densità sovrapposte
ggplot(df_pulito, aes(x = rt, fill = identity_label, color = identity_label)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("TU" = "cyan", "SCONOSCIUTO" = "salmon")) +
scale_color_manual(values = c("TU" = "cyan4", "SCONOSCIUTO" = "red3")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching TU vs SCONOSCIUTO"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "right"
)
#length(df_pulito$rt[df_pulito$id_subj=="CNTRL01"])
#aggiungiamo match_id:
# soggetti <- sort(unique(df_pulito$id_subj))
#
# estrai_numero <- function(id) {
#   as.numeric(gsub("\\D", "", id))
# }
#
# matching_table <- data.frame(
#   id_subj = soggetti,
#   gruppo = ifelse(grepl("CNTRL", soggetti), "control", "target"),
#   numero = estrai_numero(soggetti)
# )
#
# matching_table$match_id <- paste0("match", sprintf("%02d", matching_table$numero))
# matching_table <- matching_table[, c("id_subj", "match_id")]
# matching_table
#
#
# df_pulito <- merge(df_pulito, matching_table, by = "id_subj", all.x = TRUE)
# table(df_pulito$id_subj, df_pulito$match_id)
## controllo:
# df_pulito$group <- factor(df_pulito$group, levels = c("control", "target"))
# df_pulito$identity <- factor(df_pulito$identity, levels = c("SCONOSCIUTO", "TU"))
# df_pulito$match_id <- as.factor(df_pulito$match_id)
# df_pulito$id_subj <- as.factor(df_pulito$id_subj)
df_pulito$identity_label <- factor(df_pulito$identity_label, levels = c("SCONOSCIUTO", "TU"))
df_pulito$group <- factor(df_pulito$group, levels = c("CTRL", "HSAM"))
#vediamo medie:
# Calcola media e sd
media <- tapply(df_pulito$rt, df_pulito$identity_label, mean)
dev_std <- tapply(df_pulito$rt, df_pulito$identity_label, sd)
# Arrotonda a una cifra decimale
media <- round(media, 3)
dev_std <- round(dev_std, 3)
#ora vediamo le medie sia per condizione che per gruppo
#quindi hsam tu vs sconosciuto:
#cntrl tu vs sconosciuto:
df_hsam<-subset(df_pulito,df_pulito$group=="HSAM",select=c(rt,id_subj,group,acc,identity_label))
media_hsam<-tapply(df_hsam$rt,df_hsam$identity_label,mean)
sd_hsam<-tapply(df_hsam$rt,df_hsam$identity_label,sd)
df_cntrl<-subset(df_pulito,df_pulito$group=="CTRL",select=c(rt,id_subj,group,acc,identity_label))
media_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,mean)
sd_cntrl<-tapply(df_cntrl$rt,df_cntrl$identity_label,sd)
# Filtra solo le prove TU
df_tu <- df_pulito[df_pulito$identity_label == "TU", ]
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CNTRL" = "orange")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CNTRL" = "darkorange")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
# Filtra solo le prove TU
df_tu <- df_pulito[df_pulito$identity_label == "TU", ]
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CTRL" = "orange")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CTRL" = "darkorange")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
# Filtra solo le prove TU
df_tu <- df_pulito[df_pulito$identity_label == "TU", ]
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CTRL" = "grey")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CTRL" = "darkgrey")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
# Filtra solo le prove TU
df_tu <- df_pulito[df_pulito$identity_label == "TU", ]
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CTRL" = "darkgrey")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CTRL" = "darkgrey")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
# Grafico: RT matching-TU confronto tra gruppi
ggplot(df_tu, aes(x = rt, fill = group, color = group)) +
geom_density(alpha = 0.4) +
scale_fill_manual(values = c("HSAM" = "steelblue", "CTRL" = "darkgrey")) +
scale_color_manual(values = c("HSAM" = "steelblue4", "CTRL" = "darkgrey")) +
labs(
x = "RT",
y = "Densità",
fill = NULL,
color = NULL,
title = "RT Matching-TU: gruppo HSAM vs CNTRL"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "right")
